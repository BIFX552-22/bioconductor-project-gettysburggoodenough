---
title: "Workflow: generegulation"
author: "Hannah Hellmuth and Lindsey Ukishima"
format:
  revealjs:
    smaller: true
    scrollable: true
    fig-height: 4
    fig-width: 6
editor: visual
---

# Workflow: generegulation

Citation: Bioconductor Package Maintainer (2022). *generegulation: Finding Candidate Binding Sites for Known Transcription Factors via Sequence Matching*. R package version 1.23.0, <https://www.bioconductor.org/help/workflows/generegulation/>.

# Workflow:

-   "Finding Candidate Binding Sites for Known Transcription Factors (TF) via Sequence Matching"

-   Important mechanism for gene expression - many cellular processes controlled

-   Workflow demonstrates Bioconductor techniques for finding potential TF binding sites in DNA sequences

-   Used *Saccharomyces cerevisiae* (yeast)

```{r}
library(BiocManager)
library(generegulation)
library(MotifDb)
library(S4Vectors)
library(seqLogo)
library(motifStack)
library(Biostrings)
library(GenomicFeatures)
library(org.Sc.sgd.db)
library(BSgenome.Scerevisiae.UCSC.sacCer3)
library(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)
```

# Data

The data used in this workflow comes from [Allocco et al](http://www.biomedcentral.com/1471-2105/5/18), 2004, "Quantifying the relationship between co-expression, co-regulation and gene function", which looks at the gene expression across 200 conditions.

-   Set of seven widely co-expressed and correlated s. cerevisiae genes: DAL1, DAL2, DAL4, DAL5, DAL7, DAL80, and GAP1

    ![](images/paste-491090A1.png){width="406"}

# Data

-   Genes correlated with Nitrogen Catabolite Repression (NCR)

    -   How yeast switch between using nitrogen rich to nitrogen poor sources
    -   NCR restrains the yeast's ability to use poor nitrogen sources when there are rich ones available

-   NCR expression determined by 4 DNA-binding GATA factors

    -   Gat1: dependent on two negative GATA transcription factors, DAL80 and Gzf3

    -   DAL80 may repress expression of Gat1 by inhibiting it from binding & repressing NCR transcription

Note that some of the extracted rows were modified from the source code because the source information has been updated (March 2022) since the code was published (October 2017).

# Packages in this workflow:

-   MotifDb - provides numeric matrices of DNA-binding sequences which are accompanied by information about the matrix.

-   S4Vectors - allows you to represent vector-like or list-like objects as S4 objects

-   seqLogo - creates a visual representation of sequence alignments. The height of the stack at each position represents the amount of content and the of each letter represents the frequency of the amino or nucleic acid.

# Packages Continued:

-   motifStack - allows you to visually represent the alignment of multiple sequence motifs

-   Biostrings - contains multiple functions that allow for manipulation of a large sequence or sets of sequences

-   GenomicFeatures - retrieves information about a transcript from USCS Genome Browser and BioMart databases

# Packages Continued:

-   org.Sc.sgd.db - annotated information about Saccharomyces cerevisiae genome

-   BSgenome.Scerevisiae.UCSC.sacCer3 - full Saccharomyces cerevisiae genome from USCS stored as Biostring objects

-   TxDb.Scerevisiae.UCSC.sacCer3.sgdGene - loads the Saccharomyces cerevisiae genome as TxDb objects

# Method (The "What")

-   Compare transcription factor binding motif of DAL80 from different sources (ScerTF and JASPAR)
    -   Choose to move forward with the data from ScerTF
-   Compare TF binding motifs between Gat1 and DAL80 based on Georis et al. theory
    -   Gat1 sources: JASPAR, ScerTF, and UniPROBE

    -   Choose to move forward with the data from JASPAR and ScerTF
-   Confirm that DAL80 and Gat1 have the same "GATAA" binding motif
-   Confirm using a Position Weight Matrix (PMW) that the seven yeast genes have the same promoter
-   Using PMW, they also confirm that DAL80 and Gat1 have the same promoter sequence

# Method (The "How")

-   In order to visualize the TF binding motif of DAL80, they first used seqLogo, which provided a graph with the position number on the x-axis and the amount of content and the frequency of each nucleic acid at each position.

    ```{r}
    #| echo: true
    pfm.dal80.jaspar <- query(MotifDb,"DAL80")[[1]]
    seqLogo(pfm.dal80.jaspar)
    ```

-   Then, they used MotifDB and plotMotifLogoStack to visualize multiple motifs and their relationships to one another for DAL80 amongst the JASPAR and ScerTF sources.

    ```{r}
    pfm.dal80.jaspar <- new("pfm", mat=query(MotifDb, "dal80")[[5]], 
                        name="DAL80-JASPAR")

    pfm.dal80.jaspar <- new("pfm", mat=query(MotifDb, "dal80")[[1]], 
                            name="DAL80-JASPAR")

    pfm.dal80.scertf <- new("pfm", mat=query(MotifDb, "dal80")[[6]], 
                        name="DAL80-ScerTF")
    plotMotifLogoStack(DNAmotifAlignment(c(pfm.dal80.scertf, pfm.dal80.jaspar)))
    ```

# Method (The "How")

They also use MotifDB and plotMotifLogoStack to compare the three sources for Gat1.

```{r}
query(MotifDb, "gat1")
```

# Method (The "How")

```{r}
pfm.gat1.jaspar = new("pfm", mat=query(MotifDb, "gat1")[[5]], 
                       name="GAT1-JASPAR")
pfm.gat1.scertf = new("pfm", mat=query(MotifDb, "gat1")[[6]], 
                       name="GAT1-ScerTF")
pfm.gat1.uniprobe = new("pfm", mat=query(MotifDb, "gat1")[[7]], 
                       name="GAT1-UniPROBE")
plotMotifLogoStack(c(pfm.gat1.uniprobe, pfm.gat1.scertf, pfm.gat1.jaspar))
```

# Method (The "How")

-   The transcriptsBy function is used to create a GRangesList to store the genomic locations (the chromosome and the starting index of the nucleic acid) for every known transcript of each gene in the network.

    ```{r}
    #| echo: true
    pfm.dal80.scertf <- query(MotifDb, "dal80")[[6]]
    pcm.dal80.scertf <- round(100 * pfm.dal80.scertf)

    pfm.gat1.jaspar <- query(MotifDb, "gat1")[[5]]
    pcm.gat1.jaspar <- round(100 * pfm.gat1.jaspar)

    pfm.gat1.scertf <- query(MotifDb, "gat1")[[6]]
    pcm.gat1.scertf <- round(100 * pfm.gat1.scertf)

    genes <- c("DAL1", "DAL2", "DAL4", "DAL5", "DAL7", "DAL80", "GAP1")
    orfs <- as.character(mget(genes, org.Sc.sgdCOMMON2ORF))

    grl <- transcriptsBy(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene, by="gene") [orfs]
    ```

# Method (The "How")

-   The getPromoterSeq functions which takes all of the locations of the transcripts, the species, and how much of the upstream and downstream regions needed and provides a list of the promoter sequences.

    ```{r}
    #| echo: true
    promoter.seqs <- getPromoterSeq(grl, Scerevisiae, upstream=1000,
                                    downstream=0)
    promoter.seqs <- unlist(promoter.seqs)
    ```

-   The matchPWM function takes a single promoter sequence of the unlisted promoter sequences, the position count matrix, and the confidence interval to identify the binding motif in the promoter sequence.

    ```{r}
    dal80.scertf.hits <- sapply(promoter.seqs, function(pseq) 
                                matchPWM(pcm.dal80.scertf, pseq, min.score="90%"))
    gat1.scertf.hits  <- sapply(promoter.seqs, function(pseq) 
                                matchPWM(pcm.gat1.scertf, pseq, min.score="90%"))
    gat1.jaspar.hits  <- sapply(promoter.seqs, function(pseq) 
                                matchPWM(pcm.gat1.jaspar, pseq, min.score="90%"))
    ```

# Method (The "How")

-   They finally create a data frame to indicate how many instances the binding motif was found in the promoter sequence of each gene.

    ```{r}
    dal80.scertf <- sapply(dal80.scertf.hits, length)
    gat1.jaspar  <- sapply(gat1.jaspar.hits,  length)
    gat1.scertf  <- sapply(gat1.scertf.hits,  length)

    tbl.gata     <- data.frame(gene=genes, dal80.scertf, gat1.jaspar, gat1.scertf)
    tbl.gata
    ```

# Method (The "Why")

-   They chose ScerTF for DAL80 because it is known for their "yeast-specific curation"

-   They chose JASPAR and ScerTF for Gat1 because JASPAR has a similar binding motif to DAL80 and, though they don't specify why they chose ScerTF, it can be inferred that they chose it because it was a similar length and contained the reverse compliment of the GATAA motif

-   They used the generegulation package to quickly visualize and identify similar binding motifs in the seven Saccharomyces cerevisiae genes

-   Included Gat1 as a gene of interest because Georis et al suggested that DAL80 and Gat1 compete for binding sites

# Results

-   Both Gat1 and DAL80 have the GATAA motif. This may suggest that they are indeed competing.

-   Found and visualized the DNA-binding motif ("GATAA") in all of these co-regulated Nitrogen Catabolite Repression (NCR) genes

-   Extracted the sequence from the promoter regions of the seven yeast genes

# Conclusion - Skills Learned

-   The "generegulation" workflow contained multiple new tools that allowed for the exploration of DNA sequences

-   Provides insight into the regulation of cellular processes by identifying the candidate transcription factor binding sites in a sequence and allowing for the comparison of multiple sequences at once

-   Gain a lot of information just from a single graphic (seqLogo)

    -   Tells you not only what the position of each nucleic acid, but also the amount of content at that position and the frequency of the amino or nucleic acid at that position

# Conclusion - Challenges

-   Data has been updated since workflow was published

    -   Hard to confirm results, had to detour from source code to find correct/matching data

-   The workflow was kind of challenging to follow along with because some steps were not explained

    -   Hard to understand why they did some of the things they did
